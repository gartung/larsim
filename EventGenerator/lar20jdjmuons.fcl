#include "services_dune.fcl"
#include "singles_dune.fcl"
###include "simulationservices_dune.fcl"
#include "filemuons.fcl"
#include "largeantmodules_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "mccheatermodules.fcl"

process_name: SinglesJdJMuons

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "out/dejong4580ft_WC_Muons_gen_hist.root" }
  scheduler:    { wantTracer: true wantSummary: true }
  Timing:       {}
  RandomNumberGenerator: {} #ART native random number generator
  user:         @local::dunefd_simulation_services
}

#Start each new event with an empty event.
source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:  10000        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 # define the list of LArSoft modules to run through the simulate path
 producers:
 {
  generator: @local::standard_singlemu
  largeant:  @local::dunefd_largeant
  daq:       @local::dunefd_simwire
  backtrack: @local::standard_backtrackerloader
 }

# filters:{}

 analyzers:
{
  largana:   @local::dunefd_largeantana
}

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 simulate: [ generator, largeant, daq, backtrack ]
 larana: [ largana ]
 
 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [simulate ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [larana, stream1]  

}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
###default file name, can override from command line with -o or --output
   fileName:    "out/dejong800ftMuons_gen.root" 
 }
}

physics.producers.generator.FileName: "/dune/app/users/fpa06mr1/lardev_S2013.10.21_prof_dunefd/out/DUSEL-4850ft-costheta.root"